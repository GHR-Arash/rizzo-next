/// Convert a pixel value to a percentage value
///
/// @param  {String} $target  - Pixel value of element width
/// @param  {String} $context - Pixel value of element's container width
/// @return {String}          - Percentage value
@function percent($target, $context) {
  @return ($target / $context) * 100%;
}

/// Convert a pixel value to an em value
///
/// For a relational value, the input is calculated based on a parent value.
/// The default parent is 16px. The parent can be changed by passing an
/// optional second value.
///
/// @param  {String} $pixel       - Pixel value to convert
/// @param  {String} $base [16px] - Base pixel value
/// @return {String}              - em value
@function em($pixel, $base: 16px) {
  @return ($pixel / $base) * 1em;
}

/// An alias for `map-get`
///
/// @param  {Map}    $map - Map name
/// @param  {String} $key - Key name
/// @return {String}      - Key value
@function get($map, $key) {
  @return map-get($map, $key);
}

/// Half gutter; requires [Susy](http://susy.oddbird.net/)
@function gutter-half() {
  @return (gutter() / 2);
}

/// Quarter gutter; requires [Susy](http://susy.oddbird.net/)
@function gutter-quarter() {
  @return (gutter() / 4);
}

// Double gutter; requires [Susy](http://susy.oddbird.net/)
@function gutter-double() {
  @return (gutter() * 2);
}

// Quadruple gutter; requires [Susy](http://susy.oddbird.net/)
@function gutter-quad() {
  @return (gutter() * 4);
}
